#!/usr/bin/env bash

vpnPath="vpn"

dir="$(cd -P -- "$(dirname -- "${BASH_SOURCE[0]}")" && pwd -P)"

checkVpnDir() {

    if [ -n "$(find "$dir/vpn" -maxdepth 2 -type d -empty 2>/dev/null)" ]; then
        echo "VPN directory is empty"
        exit
    fi

    #check for .ovpn files
    if [ ! -n "$(find $dir -maxdepth 2 -type f -name '*.ovpn' 2>/dev/null)" ]; then
        echo "No .ovpn files found"
        exit
    fi
}

checkConfigFile() {
    if [ ! -f "$dir/user.settings" ]; then
        echo "Config file not found"
        exit
    fi

    if [ ! -s "$dir/user.settings" ]; then
        echo "Config file is empty"
        echo "Try running with --setup"
        exit
    fi
}

checkOpenVpn() {
    if [ -z "$(which openvpn3)" ]; then
        echo "OpenVPN3 is not installed"
        echo "Check https://openvpn.net/cloud-docs/owner/connectors/connector-user-guides/openvpn-3-client-for-linux.html"
        exit
    fi
}

setupConfig() {
    openvpn3 config-import --c $2 --name $1
}

createConfigFile() {
    if [ ! -f "$dir/user.settings" ]; then
        touch $dir/user.settings
    fi
}

readConfigFile() {
    while IFS= read -r line; do
        echo "$line"
    done <$dir/user.settings
}

storeName() {
    vpnName=$1
    vpnPath=$2

    name="$vpnName=$vpnPath"

    if [ -n "$(grep $vpnName $dir/user.settings)" ]; then
        return
    fi

    echo $name >>$dir/user.settings
}

changeName() {
    oldName=$1
    newName=$2

    echo "Changing $oldName to $newName"
    sed -i "0,/$oldName/s/$oldName/$newName/" $dir/user.settings
}

readDir() {
    vpnPath=$1

    for file in $vpnPath/*.ovpn; do
        vpnName=$(basename $file .ovpn)
        storeName $vpnName "$dir/vpn/$vpnName.ovpn"
    done
}

vpnService() {
    vpnName=$1
    vpnAction=$2

    case $vpnAction in
    "connect")
        openvpn3 session-start -c $vpnName
        ;;
    "disconnect")
        openvpn3 session-manage -c $vpnName -D
        ;;
    "list")
        openvpn3 sessions-list
        ;;
    "status")
        openvpn3 session-stats -c $vpnName
        ;;
    *)
        echo "Invalid action"
        ;;
    esac

}

menu() {
    vpn=$1
    PS3="Select an option: "
    select opt in Connect Disconnect List Status Quit; do
        case $opt in
        "Connect")
            vpnService $vpn "connect"
            break
            ;;
        "Disconnect")
            vpnService $vpn "disconnect"
            break
            ;;
        "List")
            vpnService $vpn "list"
            break
            ;;
        "Status")
            vpnService $vpn "status"
            break
            ;;
        "Quit")
            echo "We're done"
            exit
            ;;
        *)
            echo "Invalid option"
            ;;
        esac
    done
}

checkOpenVpn

if [ "$1" == "--setup" ]; then
    createConfigFile

    checkVpnDir

    readDir "$dir/$vpnPath"

    vpns=$(readConfigFile)

    read -p "Do you want to name your VPNs? (y/n): " nameVpns

    if [[ $nameVpns == "y" || $nameVpns == "Y" ]]; then
        for vpn in $vpns; do
            vpnName=$(echo $vpn | cut -d "=" -f1)
            vpnPath=$(echo $vpn | cut -d "=" -f2)

            read -p "Enter a name for $vpnName: " name

            changeName $vpnName $name
        done
    fi

    for vpn in $vpns; do
        vpnName=$(echo $vpn | cut -d "=" -f1)
        vpnPath=$(echo $vpn | cut -d "=" -f2)

        setupConfig $vpnName $vpnPath
    done
fi

checkVpnDir
checkConfigFile

PS3="Select a VPN: "

vpnNames=$(cut -d "=" -f1 $dir/user.settings)

select vpnOpt in $vpnNames; do
    case $vpnOpt in
    *)
        menu $vpnOpt
        break
        ;;
    esac
done
