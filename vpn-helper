#!/usr/bin/env bash

vpnPath="vpn"

dir="$(cd -P -- "$(dirname -- "${BASH_SOURCE[0]}")" && pwd -P)"

greenEcho() {
    echo -e "\033[32m$1\033[0m"
}

redEcho() {
    echo -e "\033[31m$1\033[0m"
}

yellowEcho() {
    echo -e "\033[33m$1\033[0m"
}

checkVpnDir() {

    #check if vpn directory exists
    if [ ! -d "$dir/vpn" ]; then
        mkdir $dir/vpn
    fi

    if [ -n "$(find "$dir/vpn" -maxdepth 2 -type d -empty 2>/dev/null)" ]; then
        redEcho "VPN directory is empty"
        exit
    fi

    #check for .ovpn files
    if [ ! -n "$(find $dir -maxdepth 2 -type f -name '*.ovpn' 2>/dev/null)" ]; then
        redEcho "No .ovpn files found"
        exit
    fi
}

checkConfigFile() {
    if [ ! -f "$dir/user.settings" ]; then
        touch $dir/user.settings
    fi

    if [ ! -s "$dir/user.settings" ]; then
        redEcho "Config file is empty"
        yellowEcho "Try running with --setup"
        exit
    fi
}

checkOpenVpn() {
    if [ -z "$(which openvpn3)" ]; then
        redEcho "OpenVPN3 is not installed"
        yellowEcho "Installing OpenVPN3..."
        $dir/opv3-install
        if [ $? -eq 0 ]; then
            greenEcho "OpenVPN3 installed"
        fi
    fi
}

setupConfig() {
    openvpn3 config-import --c $2 --name $1
}

createConfigFile() {
    if [ ! -f "$dir/user.settings" ]; then
        touch $dir/user.settings
    fi
}

readConfigFile() {
    while IFS= read -r line; do
        echo "$line"
    done <$dir/user.settings
}

storeName() {
    vpnName=$1
    vpnPath=$2

    name="$vpnName=$vpnPath"

    if [ -n "$(grep $vpnName $dir/user.settings)" ]; then
        return
    fi

    echo $name >>$dir/user.settings
}

changeName() {
    oldName=$1
    newName=$2

    yellowEcho "Changing $oldName to $newName"
    sed -i "0,/$oldName/s/$oldName/$newName/" $dir/user.settings
}

readDir() {
    vpnPath=$1

    for file in $vpnPath/*.ovpn; do
        vpnName=$(basename $file .ovpn)
        storeName $vpnName "$dir/vpn/$vpnName.ovpn"
    done
}

vpnService() {
    vpnName=$1
    vpnAction=$2

    case $vpnAction in
    "connect")
        openvpn3 session-start -c $vpnName
        ;;
    "disconnect")
        openvpn3 session-manage -c $vpnName -D
        ;;
    "list")
        openvpn3 sessions-list
        ;;
    "status")
        openvpn3 session-stats -c $vpnName
        ;;
    *)
        echo "Invalid action"
        ;;
    esac

}

menu() {
    vpn=$1
    PS3=$'\e[1;32mSelect an option: \e[0m'
    select opt in Connect Disconnect List Status Quit; do
        case $opt in
        "Connect")
            vpnService $vpn "connect"
            break
            ;;
        "Disconnect")
            vpnService $vpn "disconnect"
            break
            ;;
        "List")
            vpnService $vpn "list"
            break
            ;;
        "Status")
            vpnService $vpn "status"
            break
            ;;
        "Quit")
            echo "We're done"
            exit
            ;;
        *)
            echo "Invalid option"
            ;;
        esac
    done
}

create_alias() {
    current_user=$(whoami)
    shell=$(grep "^$USER" /etc/passwd | grep -o zsh)
    if [[ "$OSTYPE" == "msys" ]]; then

        echo "alias vpn=\"$1\"" >>C:\\Users\\$current_user\\.bashrc

    else
        if [[ "$shell" = "zsh" ]]; then
            if [ ! -n "$(grep "alias vpn" /home/$current_user/.zshrc)" ]; then
                sed -i "/Example aliases/a alias vpn=\"$1\"" /home/$current_user/.zshrc
            else
                redEcho "VPN Helper already installed"
                exit
            fi
        elif [[ "$shell" = "bash" ]]; then
            if [ ! -n "$(grep "alias vpn" /home/$current_user/.bashrc)" ]; then
                sed -i "/bash-doc package/a alias vpn=\"$1\"" /home/$current_user/.bashrc
            else
                redEcho "VPN Helper already installed"
                exit
            fi
        fi
    fi
}

checkOpenVpn

if [ "$1" == "--install" ]; then
    create_alias "$dir/vpn-helper"
    if [ $? -eq 0 ]; then
        greenEcho "VPN Helper installed"
        yellowEcho "Restart your terminal or run 'source ~/.bashrc' or 'source ~/.zshrc'"
    fi
    exit
fi

if [ "$1" == "--help" ]; then
    echo "Usage: vpn-helper [OPTION]"
    echo "Options:"
    echo "  --install   Install VPN Helper"
    echo "  --setup     Setup VPN Helper"
    echo "  --help      Display this help and exit"
    exit
fi

if [ "$1" == "--setup" ]; then
    createConfigFile

    checkVpnDir

    readDir "$dir/$vpnPath"

    vpns=$(readConfigFile)

    read -p "Do you want to name your VPNs? (y/n): " nameVpns

    if [[ $nameVpns == "y" || $nameVpns == "Y" ]]; then
        for vpn in $vpns; do
            vpnName=$(echo $vpn | cut -d "=" -f1)
            vpnPath=$(echo $vpn | cut -d "=" -f2)

            read -p "Enter a name for $vpnName: " name

            changeName $vpnName $name
        done
    fi

    for vpn in $vpns; do
        vpnName=$(echo $vpn | cut -d "=" -f1)
        vpnPath=$(echo $vpn | cut -d "=" -f2)

        setupConfig $vpnName $vpnPath
    done
fi

checkVpnDir
checkConfigFile

PS3=$'\e[1;32mSelect a vpn: \e[0m'

vpnNames=$(cut -d "=" -f1 $dir/user.settings)

select vpnOpt in $vpnNames; do
    case $vpnOpt in
    *)
        menu $vpnOpt
        break
        ;;
    esac
done
